---
AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless Hosting Infrustructure of Website

Parameters:
  Description:
    Description: Description
    Type: String
  RootDomainName:
    Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. example.io
    Type: String
    AllowedPattern: ^[a-zA-Z0-9-.]{1,63}[^\.]$
    ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Description: The full domain name e.g. alpha.example.io
    AllowedPattern: ^[a-zA-Z0-9-.]{1,63}[^\.]$
    ConstraintDescription: must be a valid DNS zone name.
  SSLCertificate:
      Type: String
      Description: the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate. Otherwise will downgrade to HTTP.
      AllowedPattern: "(arn:aws:acm:us-east-1:.*|^$)"
      ConstraintDescription: ARN must be from US-East-1

Conditions:
  UsesHTTPS: !Not [!Equals [!Ref SSLCertificate, ""]]

Resources:

  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: FullDomainName

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: "*"
          Action: s3:GetObject
          Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, /*]]
      Bucket:
        Ref: WebsiteBucket

  WebsiteCloudfront:
    DependsOn:
      - WebsiteBucket
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref FullDomainName
        Comment: !Ref Description
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: s3-static-files
          ViewerProtocolPolicy: !If [ UsesHTTPS, redirect-to-https, allow-all]
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          AcmCertificateArn: !If [ UsesHTTPS, !Ref SSLCertificate, !Ref "AWS::NoValue"]
          CloudFrontDefaultCertificate: !If [ UsesHTTPS, !Ref "AWS::NoValue", true]
          SslSupportMethod: !If [ UsesHTTPS, sni-only, !Ref "AWS::NoValue"]
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          - DomainName: !GetAtt WebsiteBucket.DomainName
            Id: s3-static-files
            S3OriginConfig:
              OriginAccessIdentity: ''

  DomainRecords:
    DependsOn:
      - WebsiteCloudfront
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Fn::Sub:
          - ${Domain}.
          - Domain: !Ref RootDomainName
      RecordSets:
        - Name: !Ref FullDomainName
          Type: A
          AliasTarget:
            HostedZoneId: "Z2FDTNDATAQYW2" # required value for CloudFront
            DNSName: !GetAtt [WebsiteCloudfront, DomainName]

Outputs:
  BucketName:
    Description: Name of S3 bucket to hold website content
    Value: !Ref 'WebsiteBucket'
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"
  BucketARN:
    Description: ARN of S3 bucket to hold website content
    Value: !GetAtt WebsiteBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BucketARN"
  CloudfrontARN:
    Description: ARN for Cloudfront distribution
    Value: !Ref WebsiteCloudfront
    Export:
      Name: !Sub "${AWS::StackName}-CloudfrontARN"
  CloudfrontEndpoint:
    Description: Endpoint for Cloudfront distribution
    Value: !GetAtt [WebsiteCloudfront, DomainName]
    Export:
      Name: !Sub "${AWS::StackName}-CloudfrontEndpoint"
  FullDomain:
    Description: Full DomainName
    Value: !Ref 'FullDomainName'
    Export:
      Name: !Sub "${AWS::StackName}-FullDomain"